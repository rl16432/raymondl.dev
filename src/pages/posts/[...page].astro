---
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

import {
  BlogGallery,
  NewerOlderPagination,
  PaginationHeader,
  Section,
} from '@/components';
import Base from '@/layouts/Base.astro';
import { CTA } from '@/partials/CTA';
import { AppConfig } from '@/utils/AppConfig';
import { sortByDate } from '@/utils/Posts';
import { getUrl } from '@/utils/URLMap';

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allPosts = await getCollection('posts');
  const sortedPosts = sortByDate(allPosts);

  // Return a paginated collection of paths for all posts
  return paginate(sortedPosts, { pageSize: 6 });
}

interface Props {
  page: Page<CollectionEntry<'posts'>>;
}

const { page } = Astro.props;
const titleSuffix = ` - ${AppConfig.site_name}`;
const titleBase = `Blogs page ${page.currentPage}`;
const title = titleBase + titleSuffix;
const description = 'raymondl.dev blog posts';
const urls = page.data.map((post) => `${getUrl('posts')}/${post.slug}/`);
---

<Base head={{ title, description }}>
  <Section>
    <PaginationHeader
      title="Random title here"
      description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    />
  </Section>

  <Section>
    <BlogGallery postList={page.data} urls={urls} />
  </Section>

  <Section>
    <NewerOlderPagination page={page} />
  </Section>

  <CTA />
</Base>
